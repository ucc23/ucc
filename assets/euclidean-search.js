const e=document.querySelector("[data-user-template]"),t=document.querySelector("[data-user-cards-container]"),r=document.querySelector("[data-search]");let a=[],o=[];r.addEventListener("input",(e=>{o=[],t.innerHTML="";const r=e.target.value.toLowerCase();parseFloat(r.length)>=4&&a.forEach((e=>{const t=r.split(" ");var a=!1,n=!1,c=!1;if(t[0].match(/^\d/)){var l=Math.sqrt(Math.pow(parseFloat(t[0])-parseFloat(e.RA),2)+Math.pow(parseFloat(t[1])-parseFloat(e.DEC),2));c=!0}else if("g"==t[0])l=Math.sqrt(Math.pow(parseFloat(t[1])-parseFloat(e.GLON),2)+Math.pow(parseFloat(t[2])-parseFloat(e.GLAT),2)),n=!0;else{let t=r.replace(/\s/g,"").replace("_","").replace("-","").replace("+","p").replace(".","");if(e.fnames.includes(t.slice(0,3)))l=function(e,t,r){let a=1/0;for(const o of t.split(";")){const t=r(e,o);a=Math.min(a,t)}return a}(t,e.fnames,s)/10,a=!0}l<2&&(e.distance=l,e.show_e_1=a,e.show_e_2=n,e.show_e_3=c,o.push(e))})),o.sort(((e,t)=>e.distance-t.distance)),o=o.slice(0,9),o.forEach((e=>{e.show_e_1?t.append(e.element_1):e.show_e_2?t.append(e.element_2):e.show_e_3&&t.append(e.element_3)}))}));var n,s=(n=[],function(e,t){if(e===t)return 0;var r=e.length,a=t.length;if(r&&a){for(var o,s,c,l,d=0,h=0,p=n;d<r;)p[d]=++d;for(;h<a;)for(l=t.charCodeAt(h),o=h,s=++h,d=0;d<r;++d)c=o+(e.charCodeAt(d)===l?0:1),s=s<(o=p[d])?s<c?s+1:c:o<c?o+1:c,p[d]=s;return s}return r+a});fetch("clusters.json.gz").then((e=>e.arrayBuffer())).then((t=>{const r=pako.ungzip(new Uint8Array(t),{to:"string"}),o=JSON.parse(r);a=o.map((t=>{const r=e.content.cloneNode(!0).children[0],a=e.content.cloneNode(!0).children[0],o=e.content.cloneNode(!0).children[0],n=r.querySelector("[data-header]"),s=a.querySelector("[data-header]"),c=o.querySelector("[data-header]"),l=r.querySelector("[data-body_1]"),d=a.querySelector("[data-body_2]"),h=o.querySelector("[data-body_3]"),p=t.F.split(";")[0];return r.querySelector("a").setAttribute("href","./_clusters/"+p),a.querySelector("a").setAttribute("href","./_clusters/"+p),o.querySelector("a").setAttribute("href","./_clusters/"+p),n.textContent=t.N,s.textContent=t.N,c.textContent=t.N,l.textContent=t.F.split(";").slice(1,3),d.textContent="G ("+t.L+", "+t.B+")",h.textContent="E ("+t.R+", "+t.D+")",{fnames:t.F,GLON:t.L,GLAT:t.B,RA:t.R,DEC:t.D,element_1:r,element_2:a,element_3:o}}))})).catch((e=>console.error("Error fetching or decompressing file:",e)));