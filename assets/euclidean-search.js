const userCardTemplate=document.querySelector("[data-user-template]"),userCardContainer=document.querySelector("[data-user-cards-container]"),searchInput=document.querySelector("[data-search]");function findMinimumDistance(e,t){let r=1/0;for(const a of t.split(";")){const t=stringDifference(e,a);r=Math.min(r,t)}return r}function stringDifference(e,t){if(e===t)return 0;const r=e.length,a=t.length,n=Math.abs(r-a),s=Math.max(r,a);let o=0;for(let n=0;n<Math.min(r,a);n++)e[n]!==t[n]&&o++;const l=(n+o)/s,c=Array.from({length:r+1},(()=>Array(a+1).fill(0)));for(let e=0;e<=r;e++)c[e][0]=e;for(let e=0;e<=a;e++)c[0][e]=e;for(let n=1;n<=r;n++)for(let r=1;r<=a;r++){const a=e[n-1]===t[r-1]?0:1;c[n][r]=Math.min(c[n-1][r]+1,c[n][r-1]+1,c[n-1][r-1]+a)}const u=c[r][a]/s*1.01;return Math.min(l,u)}searchInput.addEventListener("input",(e=>{results=[],userCardContainer.innerHTML="";const t=e.target.value.toLowerCase();parseFloat(t.length)>=4&&users.forEach((e=>{const r=t.split(" ");var a,n=!1,s=!1,o=!1;if(r[0].match(/^\d/))a=Math.sqrt(Math.pow(parseFloat(r[0])-parseFloat(e.RA),2)+Math.pow(parseFloat(r[1])-parseFloat(e.DEC),2)),o=!0;else if("g"==r[0])a=Math.sqrt(Math.pow(parseFloat(r[1])-parseFloat(e.GLON),2)+Math.pow(parseFloat(r[2])-parseFloat(e.GLAT),2)),s=!0;else{let r=t.replace(/\s/g,"").replace("_","").replace("-","").replace("+","p").replace(".","");e.fnames.includes(r.slice(0,3))&&(a=findMinimumDistance(r,e.fnames),n=!0)}a<5&&(e.distance=a,e.show_e_1=n,e.show_e_2=s,e.show_e_3=o,results.push(e))})),results.sort(((e,t)=>e.distance-t.distance)),results=results.slice(0,9),console.log(results),results.forEach((e=>{e.show_e_1?userCardContainer.append(e.element_1):e.show_e_2?userCardContainer.append(e.element_2):e.show_e_3&&userCardContainer.append(e.element_3)}))})),fetch("clusters.json.gz").then((e=>e.arrayBuffer())).then((e=>{const t=pako.ungzip(new Uint8Array(e),{to:"string"}),r=JSON.parse(t);users=r.map((e=>{const t=userCardTemplate.content.cloneNode(!0).children[0],r=userCardTemplate.content.cloneNode(!0).children[0],a=userCardTemplate.content.cloneNode(!0).children[0],n=t.querySelector("[data-header]"),s=r.querySelector("[data-header]"),o=a.querySelector("[data-header]"),l=t.querySelector("[data-body_1]"),c=r.querySelector("[data-body_2]"),u=a.querySelector("[data-body_3]"),i=e.F.split(";")[0];return t.querySelector("a").setAttribute("href","./_clusters/"+i),r.querySelector("a").setAttribute("href","./_clusters/"+i),a.querySelector("a").setAttribute("href","./_clusters/"+i),n.textContent=e.N,s.textContent=e.N,o.textContent=e.N,l.textContent=e.F.split(";").slice(1,3),c.textContent="G ("+e.L+", "+e.B+")",u.textContent="E ("+e.R+", "+e.D+")",{fnames:e.F,GLON:e.L,GLAT:e.B,RA:e.R,DEC:e.D,element_1:t,element_2:r,element_3:a}}))})).catch((e=>console.error("Error fetching or decompressing file:",e)));