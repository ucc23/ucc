const userCardTemplate=document.querySelector("[data-user-template]"),userCardContainer=document.querySelector("[data-user-cards-container]"),searchInput=document.querySelector("[data-search]"),stringDifference=(e,t)=>{if(e===t)return 0;const r=e.length,n=t.length,a=Math.abs(r-n);if(a>3)return 1;const s=Math.max(r,n);let o=0;for(let a=0;a<Math.min(r,n);a++)e[a]!==t[a]&&o++;const c=(a+o)/s,l=Array.from({length:r+1},(()=>Array(n+1).fill(0)));for(let e=0;e<=r;e++)l[e][0]=e;for(let e=0;e<=n;e++)l[0][e]=e;for(let a=1;a<=r;a++)for(let r=1;r<=n;r++){const n=e[a-1]===t[r-1]?0:1;l[a][r]=Math.min(l[a-1][r]+1,l[a][r-1]+1,l[a-1][r-1]+n)}const i=l[r][n]/s*1.01;return Math.min(c,i)};searchInput.addEventListener("input",(e=>{if(userCardContainer.innerHTML="",e.target.value.length<4)return;const t=e.target.value.toLowerCase().trim(),r=t.split(" ");users.map((e=>{let n=1/0,a=null;if(r[0].match(/^\d/))n=Math.hypot(parseFloat(r[0])-e.RA,parseFloat(r[1])-e.DEC),a="ra_dec";else if("g"===r[0])n=Math.hypot(parseFloat(r[1])-e.GLON,parseFloat(r[2])-e.GLAT),a="galactic";else{const r=t.replace(/[\s_.\-]/g,"").replace(/\+/g,"p");e.fnames.includes(r.slice(0,3))&&(n=Math.min(...e.fnames.split(";").map((e=>stringDifference(r,e)))),a="name")}return{...e,distance:n,matchType:a}})).filter((e=>e.distance<5)).sort(((e,t)=>e.distance-t.distance)).slice(0,9).forEach((e=>{const t=e["element_"+("name"===e.matchType?1:"galactic"===e.matchType?2:3)];userCardContainer.appendChild(t)}))})),fetch("clusters.json.gz").then((e=>e.arrayBuffer())).then((e=>{const t=pako.ungzip(new Uint8Array(e),{to:"string"}),r=JSON.parse(t);users=r.map((e=>{const t=userCardTemplate.content.cloneNode(!0),r=["element_1","element_2","element_3"].map(((r,n)=>{const a=t.cloneNode(!0).children[0],s=a.querySelector("[data-header]"),o=a.querySelector(`[data-body_${n+1}]`),c=`./_clusters/${e.F.split(";")[0]}`;return a.querySelector("a").setAttribute("href",c),s.textContent=e.N,0===n&&(o.textContent=e.F.split(";").slice(1,3).join(", ")),1===n&&(o.textContent=`G (${e.L}, ${e.B})`),2===n&&(o.textContent=`E (${e.R}, ${e.D})`),{key:r,element:a}}));return{fnames:e.F,GLON:e.L,GLAT:e.B,RA:e.R,DEC:e.D,...Object.fromEntries(r.map((({key:e,element:t})=>[e,t])))}}))})).catch((e=>console.error("Error fetching or decompressing data:",e)));