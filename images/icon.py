
import matplotlib.pyplot as plt
import numpy as np

# while True:

# Set up the circular background
fig, ax = plt.subplots(figsize=(3, 3))
ax.set_aspect('equal')
ax.set_xlim([-.32, .32])
ax.set_ylim([-.32, .32])
circle = plt.Circle((0, 0), .3, color='k', lw=5, fill=False)
ax.add_artist(circle)


# # Generate random coordinates for the points in a 2D Gaussian distribution
# seed = 4086
# print(seed)
# np.random.seed(seed)
# N = 150
# mean = [0, 0]
# cov = [[0.01, 0], [0, 0.01]]
# x, y = np.random.multivariate_normal(mean, cov, N).T
# s_r = np.random.uniform(10, 150, N)
# print(np.round(x, 2))
# print(np.round(y, 2))

x = np.array([
    -0.08, -0.13,  0.01, -0.01,  0.03,  0.03,  0.09, -0.25,  0.12,
    -0.11, -0.09,  0.01, -0.17,  0.1 , -0.08, -0.04,  0.04,  0.16,
     0.02, -0.04,  0.02,  0.03,  0.09, -0.  , -0.06, -0.03,  0.22,
     0.02,  0.11, -0.19,  0.06, -0.25,  0.  ,  0.06,  0.01, -0.13,
     0.05, -0.1 , -0.12, -0.03, -0.07,  0.02,  0.06, -0.04, -0.01,
    -0.09,  0.1 ,  0.05,  0.05, -0.09, -0.  ,  0.2 , -0.07, -0.12,
     0.12,  0.08, -0.06, -0.02, -0.11,  0.11, -0.2 ,  0.06, -0.06,
    -0.16,  0.19,  0.08,  0.03, -0.11, -0.01, -0.04,  0.08,  0.02,
     0.13,  0.02, -0.11,  0.13, -0.11, -0.08,  0.17, -0.06,  0.02,
     0.  , -0.04, -0.01,  0.  ,  0.06,  0.2 , -0.1 ,  0.12,  0.03,
     0.06, -0.04,  0.04,  0.02,  0.2 ,  0.09,  0.06,  0.03, -0.04,
     0.06, -0.2 ,  0.01,  0.1 ,  0.04,  0.05, -0.06, -0.05, -0.12,
     0.02,  0.01, -0.08, -0.08, -0.2 , -0.02, -0.16,  0.16, -0.06,
    -0.08,  0.02,  0.13, -0.22,  0.1 , -0.01,  0.04,  0.09, -0.1 ,
    -0.07, -0.1 , -0.02,  0.16, -0.02,  0.13, -0.02, -0.05,  0.1 ,
     0.02, -0.03,  0.07,  0.05,  0.04, -0.08,  0.  ,  0.1 ,  0.06,
     0.09, -0.03, -0.05, -0.06,  0.01, -0.05])
y = np.array([
    0.09,  0.08, -0.12, -0.12,  0.12, -0.06,  0.12,  0.01,  0.08,
    -0.05, -0.07,  0.09, -0.06,  0.01,  0.04,  0.02,  0.15, -0.06,
    -0.01,  0.07,  0.01,  0.05,  0.08,  0.1 ,  0.03, -0.05, -0.2 ,
     0.08, -0.06,  0.06,  0.09, -0.04,  0.12, -0.1 , -0.1 ,  0.05,
     0.06, -0.05, -0.11, -0.04,  0.02,  0.03,  0.14,  0.03, -0.06,
     0.01,  0.08,  0.09, -0.08,  0.01, -0.08, -0.03,  0.  , -0.12,
    -0.18,  0.05,  0.11, -0.04,  0.16, -0.  ,  0.13, -0.  , -0.07,
     0.08,  0.  , -0.05,  0.11, -0.02,  0.03, -0.02, -0.03, -0.06,
    -0.16, -0.01, -0.12,  0.05,  0.07,  0.04, -0.03, -0.01,  0.03,
     0.15, -0.01,  0.02, -0.16, -0.02,  0.05,  0.16, -0.14, -0.1 ,
    -0.02,  0.14, -0.17,  0.04, -0.02,  0.24,  0.14, -0.03,  0.08,
     0.04,  0.04, -0.04, -0.08, -0.03,  0.22,  0.19,  0.08, -0.01,
     0.02,  0.06,  0.02,  0.01,  0.19,  0.04,  0.07, -0.11,  0.2 ,
     0.02, -0.05, -0.1 ,  0.15,  0.1 , -0.06,  0.07, -0.05,  0.04,
    -0.14, -0.04,  0.16, -0.09,  0.21,  0.15, -0.  , -0.14,  0.04,
     0.17, -0.01, -0.01,  0.07, -0.1 , -0.02,  0.03, -0.09, -0.  ,
     0.03, -0.11,  0.07, -0.03, -0.  , -0.23])
s_r = np.array([
    116.09,  48.82, 101.58,  46.86,  32.89,  84.58,  30.19,  77.84,
    127.7 ,  91.95,  23.98, 109.73, 113.14, 104.93,  80.37,  65.63,
    102.23, 114.84,  60.37,  36.26,  47.86,  39.84, 137.48,  86.61,
    70.17,  50.74,  87.38, 132.54, 106.78,  29.22, 114.46,  22.52,
    116.16,  88.65,  67.41, 111.1 ,  59.11, 146.23,  10.18,  19.94,
    129.74,  48.07, 114.9 , 139.77,  25.15,  25.84, 135.88, 113.53,
    114.25, 115.16, 134.34,  79.76, 107.82,  24.39,  24.79,  47.24,
    74.54,  86.03, 138.87,  92.87,  58.48, 121.32,  18.87,  22.15,
    88.13,  54.95, 124.69, 108.94,  77.53,  65.68, 127.99,  80.57,
    36.8 , 103.51,  25.21,  85.13,  94.62,  40.53, 125.81, 119.54,
    57.12,  36.13,  54.56,  51.97,  27.15,  40.23,  98.84,  21.43,
    140.56, 111.08, 116.84,  94.45, 136.09, 136.68, 120.52,  29.35,
    16.61,  69.13,  83.49,  22.95, 108.23, 116.24, 127.47, 103.41,
    32.52, 111.48,  88.8 ,  23.63,  21.62,  77.56,  75.98, 105.12,
    80.69,  17.43,  55.08,  55.16,  60.83,  92.7 , 112.13, 126.04,
    122.89,  57.92,  21.46,  47.3 , 102.41,  64.74,  78.76, 132.47,
    88.69,  66.66,  78.71, 143.81,  35.51,  44.81,  94.7 ,  51.37,
    80.26, 107.95,  50.35, 126.07, 127.5 ,  94.03,  70.57,  31.17,
    145.56, 104.71, 144.58,  34.49,  12.12, 125.06])

# Plot the black points
ax.scatter(x, y, color='black', s=s_r, ec='w')

ax.axis('off')
# Show the plot
# This produces a 62x62 px file
plt.savefig('icon.webp', dpi=25, transparent=True, bbox_inches='tight')
# plt.show()
